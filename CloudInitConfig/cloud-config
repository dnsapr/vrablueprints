Content-Type: multipart/mixed; boundary="==part=="
        MIME-Version: 1.0

        --==part==
        Content-Type: text/cloud-config; charset="us-ascii"
        MIME-Version: 1.0
        Content-Transfer-Encoding: 7bit
        Content-Disposition: attachment; filename="cloud-config"
        #cloud-config
        set_hostname: ${self.resourceName}
        
        --==part==    
        Content-Type: text/x-shellscript; charset="us-ascii"
        MIME-Version: 1.0
        Content-Transfer-Encoding: 7bit
        Content-Disposition: attachment; filename="init-vm.ps1"

        #ps1_sysnative
        Set-WmiInstance -InputObject ( Get-WmiObject -Class Win32_volume -Filter "DriveLetter = 'd:'" ) -Arguments @{DriveLetter='a:'}
        $noFormanDisk = Get-Disk | Where-Object{$_.OperationalStatus -eq "Offline" -and $_.PartitionStyle -eq "RAW"}
        Foreach($objDisk In $noFormanDisk){
        $DiskNo = $objDisk.Number
        $objPartition = Get-Disk -Number $DiskNo | Initialize-Disk -PartitionStyle "GPT" -PassThru | New-Partition -AssignDriveLetter -UseMaximumSize
        Format-Volume -DriveLetter $objPartition.DriveLetter -FileSystem "NTFS" -NewFileSystemLabel "data$DiskNo" -Confirm:$false
        }
        $driveEject = New-Object -comObject Shell.Application
        $driveEject.Namespace(17).ParseName("A:\").InvokeVerb("Eject")