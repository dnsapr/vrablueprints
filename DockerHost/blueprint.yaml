---
formatVersion: 1
name: Docker Host
version: 1
########## INPUTS ##########
inputs:
  namevm:
    title: Name
    type: string
    description: Name of VM
  images:
    title: Operatig System
    type: object
    $ref: /ref/property-groups/imagesLinux
    description: Choice Distr
  resources:
    type: object
    title: Cloud Zone
    $ref: /ref/property-groups/resourceZone
    description: Choice Cloud Zone
  vcpu:
    title: vCPU
    type: integer
    description: Indicate the quantity VCPU
  mem:
    title: Memory in GB
    type: integer
    minimum: 1
    default: 1
    description: Indicate the quantity RAM
  datastore:
    type: object
    title: DataStore
    $ref: /ref/property-groups/dsOnprem
    description: Choice datastore
  diskOSsize:
    type: integer
    title: Size Boot Disk
    description: Size First Disk in GB
    minimum: 10
########## RESOURCES ##########
resources:
##########    VM     ##########
  baselnx:
    type: Cloud.vSphere.Machine
    allocatePerInstance: true
    properties:
      ${resource.baselnx.osType}: LINUX
      constraints:
        - tag: ${input.resources.resourcePlaces}
      name: ${input.namevm}
      image: ${input.images.imglnx}
      cpuCount: ${input.vcpu}
      totalMemoryMB: ${(input.mem) * 1024}
      cloudConfig: |
        #cloud-config
        hostname: ${input.namevm}
        groups:
          - docker
        write_files:
        - path: /etc/docker/daemon.json
          content: |
            {
             "hosts": ["tcp://0.0.0.0:2375", "unix:///var/run/docker.sock"]
            }
        - path: /etc/systemd/system/docker.service.d/override.conf
          content: |
            [Service]
            ExecStart=
            ExecStart=/usr/bin/dockerd --config-file /etc/docker/daemon.json
        apt:
          sources:
            docker.list:
              keyid: '9dc858229fc7dd38854ae2d88d81803c0ebfcd88'
              keyserver: 'hkp://keyserver.ubuntu.com:80'
              source: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu $RELEASE stable'
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose
          - docker-compose-plugin
        runcmd:
          - usermod -aG docker #<UserName>
      storage:
        constraints:
          - tag: ${input.datastore.datastores}
        provisioningType: ${input.datastore.provisioning}
        bootDiskCapacityInGB: ${input.diskOSsize}
      networks:
        - network: ${resource.Cloud_vSphere_Network_1.id}
  ########## NETWORK ##########
  Cloud_vSphere_Network_1:
    type: Cloud.vSphere.Network
    properties:
      networkType: existing
